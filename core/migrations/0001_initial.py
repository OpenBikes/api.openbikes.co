# Generated by Django 3.0.8 on 2020-07-28 18:45

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.TextField(unique=True, verbose_name='Name')),
                ('slug', models.TextField(unique=True, verbose_name='Slug')),
                ('api_name', models.TextField(null=True, verbose_name='API name')),
                ('active', models.BooleanField(default=True)),
                ('time_zone', models.TextField(verbose_name='Time zone')),
                ('_geojson', models.TextField(null=True, verbose_name='GeoJSON')),
            ],
            options={
                'verbose_name_plural': 'cities',
                'db_table': 't_cities',
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.TextField(unique=True, verbose_name='Name')),
                ('slug', models.TextField(unique=True, verbose_name='Slug')),
            ],
            options={
                'verbose_name_plural': 'countries',
                'db_table': 't_countries',
            },
        ),
        migrations.CreateModel(
            name='DocksUpdate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fetched_at', models.DateTimeField()),
                ('at', models.DateTimeField(null=True)),
                ('n_empty', models.IntegerField()),
                ('n_taken', models.IntegerField()),
            ],
            options={
                'verbose_name_plural': 'docks_updates',
                'db_table': 't_docks_updates',
            },
        ),
        migrations.CreateModel(
            name='Provider',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.TextField(unique=True, verbose_name='Name')),
                ('slug', models.TextField(unique=True, verbose_name='Slug')),
            ],
            options={
                'verbose_name_plural': 'providers',
                'db_table': 't_providers',
            },
        ),
        migrations.CreateModel(
            name='WeatherUpdate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fetched_at', models.DateTimeField()),
                ('at', models.DateTimeField()),
                ('pressure', models.FloatField()),
                ('temperature', models.FloatField()),
                ('humidity', models.FloatField()),
                ('wind_speed', models.FloatField()),
                ('clouds', models.FloatField()),
                ('city', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='weather_updates', to='core.City')),
            ],
            options={
                'verbose_name_plural': 'weather_updates',
                'db_table': 't_weather_updates',
            },
        ),
        migrations.CreateModel(
            name='Station',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.TextField(verbose_name='Name')),
                ('slug', models.TextField(verbose_name='Slug')),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('altitude', models.FloatField()),
                ('is_available', models.BooleanField(default=True)),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stations', to='core.City')),
                ('docks_update', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='stations', to='core.DocksUpdate')),
            ],
            options={
                'verbose_name_plural': 'stations',
                'db_table': 't_stations',
            },
        ),
        migrations.AddField(
            model_name='docksupdate',
            name='station',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='updates', to='core.Station'),
        ),
        migrations.AddField(
            model_name='city',
            name='country',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cities', to='core.Country'),
        ),
        migrations.AddField(
            model_name='city',
            name='provider',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cities', to='core.Provider'),
        ),
        migrations.AddField(
            model_name='city',
            name='weather_update',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cities', to='core.WeatherUpdate'),
        ),
        migrations.CreateModel(
            name='Archive',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('year', models.IntegerField()),
                ('month', models.IntegerField()),
                ('n_bytes', models.BigIntegerField()),
                ('city', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='archives', to='core.City')),
            ],
            options={
                'verbose_name_plural': 'archives',
                'db_table': 't_archives',
            },
        ),
    ]
